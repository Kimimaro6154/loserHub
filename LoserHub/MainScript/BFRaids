local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kimimaro6154/loserHub/main/LoserHub/uilib.lua"))()
local ESP = loadstring(game:HttpGet("https://ghostbin.co/paste/yerse/raw"))()
local PlayerMain = library:NewWindow("Player")
local Player = PlayerMain:NewSection("Player Esp")
SizeHitBox = 60
Player:CreateSlider("Size", 5,100,SizeHitBox,false,function(value)
    SizeHitBox = value
end)
Player:CreateToggle("Hit Box Player",function(value)
    HitBox = value
end)
EspA = false
Player:CreateToggle("Esp Player",function(value)
    EspA = value
    if EspA then
        ESP:NameESPToggle(true)
    elseif not EspA then
        ESP:NameESPToggle(false)
    end 
end)

local RAIDS = PlayerMain:NewSection("Raids")
RAIDS:CreateTextLabel("Use In Raid Only", 18)
Distance = 60
RAIDS:CreateSlider("Distance", 5,500,Distance,false,function(value)
    Distance = value
end)
RAIDS:CreateToggle("Kill Arua",function(value)
    Raids = value
end)
spawn(function()
    while wait() do
        if Raids then
            for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                if Raids and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position-game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= Distance then
                    pcall(function()
                        repeat wait()
                            v.HumanoidRootPart.Transparency = 0.5
                            v.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
                            v.HumanoidRootPart.BrickColor = BrickColor.new("White")
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.Health = 0
                        until not Raids or not v.Parent or v.Humanoid.Health <= 0
                    end)
                end
            end
        end
    end
end)

spawn(function()
    while wait() do
        if HitBox then
            for i , v in pairs(workspace.Characters:GetDescendants()) do
                if v:IsA("Model") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                    if v.Name == game.Players.LocalPlayer.Name then

                    else
                        v.HumanoidRootPart.Transparency = 0.5
                        v.HumanoidRootPart.Size = Vector3.new(100,100,100)
                        v.HumanoidRootPart.BrickColor = BrickColor.new("White")
                        v.HumanoidRootPart.CanCollide = false
                    end
                end
            end 
        end
    end
end)

local s1 = library:NewWindow("Setting")
local set = s1:NewSection("Setting")

set:CreateTextLabel("Toggle Gui - RightControl", 17.5)
set:CreateTextLabel("Shiro Hub", 18)
set:CreateTextLabel("discord.gg/rBDwRu87EH", 17)
set:CreateButton("Copy link discord",function()
    setclipboard("https://discord.gg/rBDwRu87EH")
end)
set:CreateButton("Destroy Gui",function()
    if game:GetService("CoreGui"):FindFirstChild("loserui") then
        game:GetService("CoreGui").loserui:Destroy()
    end
end)

set:CreateTextLabel("--   Server   --", 18)

set:CreateButton("Rejoin",function()
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)

set:CreateButton("Server Hob",function()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    local Deleted = false
    local File = pcall(function()
        AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
    end)
    if not File then
        table.insert(AllIDs, actualHour)
        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
    end
    function TPReturner()
        local Site;
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end
    function Teleport()
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end)
